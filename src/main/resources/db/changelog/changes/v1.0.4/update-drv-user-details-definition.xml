<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
  <changeSet id="update-user-details-entity-type-definition" author="bsharp@ebsco.com">
    <update tableName="entity_type_definition">
      <column name="definition">
        {
          "id": "0069cf6f-2833-46db-8a51-8934769b8289",
          "name":"drv_user_details",
          "private" : false,
          "fromClause": "src_users_users LEFT JOIN src_users_groups ON src_users_groups.id = ((src_users_users.jsonb ->> 'patronGroup'::text)::uuid)",
          "columns": [
            {
              "name": "user_active",
              "dataType":{
                "dataType":"booleanType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'active'",
              "visibleByDefault": true,
              "values": [
                {
                  "value": "true",
                  "label": "True"
                },
                {
                  "value": "false",
                  "label": "False"
                }
              ]
            },
            {
              "name": "user_barcode",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'barcode'",
              "visibleByDefault": true
            },
            {
              "name": "user_created_date",
              "dataType":{
                "dataType":"dateType"
              },
              "valueGetter": "src_users_users.jsonb -> 'metadata' ->> 'createdDate'",
              "visibleByDefault": false
            },
            {
              "name": "user_date_of_birth",
              "dataType":{
                "dataType":"dateType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'dateOfBirth'",
              "visibleByDefault": false
            },
            {
              "name": "user_email",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'email'",
              "visibleByDefault": false
            },
            {
              "name": "user_enrollment_date",
              "dataType":{
                "dataType":"dateType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'enrollmentDate'",
              "visibleByDefault": false
            },
            {
              "name": "user_expiration_date",
              "dataType":{
                "dataType":"dateType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'expirationDate'",
              "visibleByDefault": false
            },
            {
              "name": "user_external_system_id",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'externalSystemId'",
              "visibleByDefault": false
            },
            {
              "name": "user_first_name",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'firstName'",
              "visibleByDefault": true
            },
            {
              "name": "id",
              "dataType":{
                "dataType":"rangedUUIDType"
              },
              "valueGetter": "src_users_users.id",
              "visibleByDefault": true
            },
            {
              "name": "user_last_name",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'lastName'",
              "visibleByDefault": true
            },
            {
              "name": "user_middle_name",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'middleName'",
              "visibleByDefault": false
            },
            {
              "name": "user_mobile_phone",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'mobilePhone'",
              "visibleByDefault": false
            },
            {
              "name": "user_patron_group",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_groups.jsonb ->> 'group'",
              "visibleByDefault": false,
              "idColumnName": "user_patron_group_id",
              "source": {
                "entityTypeId": "e611264d-377e-4d87-a93f-f1ca327d3db0",
                "columnName": "group"
              }
            },
            {
              "name": "user_patron_group_id",
              "dataType":{
                "dataType":"rangedUUIDType"
              },
              "valueGetter": "src_users_groups.id",
              "visibleByDefault": false
            },
            {
              "name": "user_phone",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'phone'",
              "visibleByDefault": true
            },
            {
              "name": "user_preferred_contact_type",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "CASE (src_users_users.jsonb -> 'personal'::text) ->> 'preferredContactTypeId'::text WHEN '001'::text THEN 'Mail (Primary Address)'::text WHEN '002'::text THEN 'Email'::text WHEN '003'::text THEN 'Text Message'::text ELSE 'unknown'::text END",
              "visibleByDefault": false,
              "values": [
                {
                  "value": "Email",
                  "label": "Email"
                },
                {
                  "value": "Mail (Primary Address)",
                  "label": "Mail (Primary Address)"
                },
                {
                  "value": "Text Message",
                  "label": "Text Message"
                }
              ]
            },
            {
              "name": "user_preferred_first_name",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb -> 'personal' ->> 'preferredFirstName'",
              "visibleByDefault": true
            },
            {
              "name": "user_primary_address",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "concat_ws(', '::text, NULLIF(( SELECT subquery.addressline1 FROM ( SELECT add_id.value ->> 'addressLine1'::text AS addressline1, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text), NULLIF(( SELECT subquery.addressline2 FROM ( SELECT add_id.value ->> 'addressLine2'::text AS addressline2, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text), NULLIF(( SELECT subquery.city FROM ( SELECT add_id.value ->> 'city'::text AS city, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text), NULLIF(( SELECT subquery.region FROM ( SELECT add_id.value ->> 'region'::text AS region, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text), NULLIF(( SELECT subquery.postalcode FROM ( SELECT add_id.value ->> 'postalCode'::text AS postalcode, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text), NULLIF(( SELECT subquery.countryid FROM ( SELECT add_id.value ->> 'countryId'::text AS countryid, row_number() OVER (ORDER BY (add_id.value ->> 'primaryAddress'::text)) AS row_num FROM jsonb_array_elements((src_users_users.jsonb -> 'personal'::text) -> 'addresses'::text) add_id(value)) subquery WHERE subquery.row_num = 1), ''::text))",
              "visibleByDefault": false
            },
            {
              "name": "user_updated_date",
              "dataType":{
                "dataType":"dateType"
              },
              "valueGetter": "src_users_users.jsonb -> 'metadata' ->> 'updatedDate'",
              "visibleByDefault": false
            },
            {
              "name": "username",
              "dataType":{
                "dataType":"stringType"
              },
              "valueGetter": "src_users_users.jsonb ->> 'username'",
              "visibleByDefault": true
            }
          ],
          "defaultSort": [
            {
              "columnName": "id",
              "direction": "ASC"
            }
          ]
        }
      </column>
      <where>id = '0069cf6f-2833-46db-8a51-8934769b8289'</where>
    </update>
  </changeSet>
</databaseChangeLog>
